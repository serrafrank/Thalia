buildscript {

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

ext {
    major = System.getenv('MAJOR_VERSION') as Integer ?: "${majorVersion}" as Integer
    minor = System.getenv('MINOR_VERSION') as Integer ?: "${minorVersion}" as Integer
    correction = System.getenv('CORRECTION_VERSION') as Integer ?: "${correctionVersion}" as Integer
    state = System.getenv('PROD_ENV') ? '' : System.getenv('RELEASE_ENV') ? "-RELEASE" : "-SNAPSHOT"
    revision = System.getenv('PROD_ENV') ? '' : '_r' + 'git rev-list --count HEAD'.execute().text.trim() + '@' + 'git rev-parse --short HEAD'.execute().text.trim()

}


allprojects {
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    version = "${major}.${minor}.${correction}${state}${revision}"

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'

    targetCompatibility = 17
    sourceCompatibility = 17

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }


    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'io.micrometer:micrometer-tracing-bridge-brave'
        implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    tasks.named('bootBuildImage') {
        builder = 'paketobuildpacks/builder:tiny'
        environment = ['BP_NATIVE_IMAGE': 'true']
    }

}
